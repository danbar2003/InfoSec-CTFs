import numpy as np

def convert_from_bits(bits):
    chars = []
    for b in range(len(bits) / 8):
        byte = bits[b*8:(b+1)*8]
        chars.append(chr(int(''.join([str(bit) for bit in byte]), 2)))
    return ''.join(chars)

def decrypt(enc):
	tmp = enc.tolist()
	flag = []
	for i in tmp:
		x = matrix(ZZ, i[0]).det()
		y = matrix(ZZ, i[1]).det()
		if (x == y):
			flag.append(1)
		else:
			flag.append(0)
	return flag

def loading(file_name):
    np_load_old = np.load
    np.load = lambda *a,**k: np_load_old(*a, allow_pickle=True, **k)
    flag_enc = np.load(f'{file_name}.npy')
    np.load = np_load_old
    return flag_enc


flag_bits = decrypt(np.load('enc.npy', allow_pickle=True))
flag = convert_from_bits(flag_bits)

print (flag)

